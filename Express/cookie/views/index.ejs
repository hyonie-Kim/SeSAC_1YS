<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <!-- 부트스트립 CDN -->
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
      integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
      integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
      crossorigin="anonymous"
    ></script>
    <style>
      a {
        text-decoration: none;
      }
      p {
        display: inline;
      }
      span {
        border: 1px solid black;
      }
    </style>
  </head>
  <body>
    <h1>Hello, Cookie 🍪 연습중!</h1>
    <ul>
      <li>
        쿠키를 사용하기 위해서 미들웨어 설치
        <span>npm i cookie-parser --save</span>
      </li>
      <li>
        index.js 제일 상단부분에
        <span>const cookieParser = require("cookie-parser");</span>cookie
        parser를 불러온다.
      </li>
      <li>
        app.use()를 통해서 app에게 오는 모든 요청에 대해서 cookie parser
        미들웨어를 실행한다. <span>app.use(cookieParser( ));</span>
      </li>
      <li>
        클라이언트에서 서버 쪽으로 요청을 보낼 때 HTTP header 영역에 쿠키를
        담아서 보낸다.
      </li>
      <li>
        cookie parser는 헤더영역에 담긴 쿠키를 조금 더 서버에서 쉽게 쿠키를
        확인할 수 있도록 도와주는 미들웨어이다.
      </li>
      <li>
        서버쪽에서 클라이언트로 쿠키를 발행하는 방법은 요청이 왔을때, 어떤
        파일을 render() 하거나 send 파일을 보내기 이전에
        <span>res.cookie( )</span>로 클라이언트에 쿠키를 만들어 줄 수 있다.
      </li>
      <li>cookie는 두개의 인자와 옵션을 받을 수 있다.</li>
      <li>
        첫번째 인자는 쿠키를 사용할 이름, 두번째인자는 쿠키에 들어갈 값, 세번째
        옵션은 필요에 따라서 셋팅할수 있다. <span>res.cookie("","",{ })</span>
      </li>
    </ul>
    <h3>cookie 옵션 사용</h3>
    <ul>
      <li>
        cookies를 사용하면서 유의할점은 사용자에게 쿠키의 값이 노출이 될수 있다.
      </li>
      <li>
        그래서 쿠키를 값을 숨길수 있는 방법이 있다. cookie parser 미들웨어를
        셋팅할때, cookie parser에게 인자로 아무런 문자열을 넣으면 된다.
        <span>app.use(cookieParser("아무런 문자열이나 상관없음"));</span>
      </li>
      <li>
        쿠키를 발행할 때, 옵션 중에 signed:true를 주면 클라이언트에게 보내는
        쿠키의 값을 숨길수 있다.
      </li>
      <li>
        쿠키 요청을 클릭하고, value값을 확인하면 test문자열이 출력되지 않고 값이
        변경되어 사용자에게 출력되는 것을 확인할수 있다.
      </li>
      <li>
        값이 변경된 즉, signed된 쿠키의 값은 다시 클라이언트가 어떻게 확인을
        할수 있는지 -> <span>console.log(req.cookies)</span>가
        아니라<span>console.log(req.signedcookies)</span>를 통해서 이 값을
        추적을 할수 있다.
      </li>
      <li>
        쿠키를 만들면 다른 url로 이동을 하더라도 쿠키는 남아 있게된다. 특정한
        경우에만 쿠키를 발급 한다면 쿠키를 만들때 옵션으로 path에 해당 url을
        넣어주면 특정 url만 쿠키가 발급된다.
      </li>
    </ul>
    <button><a href="/getCookie">쿠키 요청</a></button>
    <p>
      쿠키 요청 버튼을 누르면 브라우저에게 쿠키를 발급, 🛠어떤 쿠키가 있는지
      확인을 하려면, 검사> 어플리케이션탭> Cookies 에서 쿠키가 만들어진 것을
      확인 할 수 있다.
    </p>
    <br /><br />
    <button><a href="/checkCookie">쿠키 확인</a></button>
    <p>
      쿠키 확인 버튼을 누르면 console.log()로 터미널에서 쿠키가 어떤형태인지
      확인한다.
    </p>
    <br /><br />
    <button><a href="/clearCookie">쿠키 삭제</a></button>
    <p>
      <span>res.clearCookie("cookie").render("index");</span>를 통해 삭제를 할수
      있다.인자로 쿠키를 이름을 알려줘야한다.
    </p>
    <br /><br />
    <button><a href="/Unique_clearCookie">특정 쿠키 삭제</a></button>
  </body>
</html>
